#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <ctime>

using namespace std;

////////// A //////////
//struct Date {
//    int day;
//    int month;
//    int year;
//    Date getAge(Date dob){
//
//        Date tempDate;
//        
//        time_t t = time(0);
//        tm curTime = *localtime(&t);
//
//        //cout << "Current Day : " << curTime.tm_mday<<", Current Month : " << curTime.tm_mon+1 << ", Current Year : " << curTime.tm_year+1900 << endl;
//
//        tempDate.day = curTime.tm_mday - day;
//        tempDate.month = curTime.tm_mon + 1 - month;
//        tempDate.year = curTime.tm_year + 1900 - year;
//
//        //cout << "Current Day : " << tempDate.day <<", Current Month : " << tempDate.month << ", Current Year : " << tempDate.year << endl;
//
//        return tempDate;
//    }
//    void displayAge() {
//        cout << "Day : " << day << ", Month : " << month << ", Year : " << year << endl;
//    }
//};

////////// B=1 //////////
//int *arr = NULL;
//int capacity = 0;
//int noOfElements = 0;
//void createSet(int s) {
//    if (s > 0)
//    {
//        capacity = s;
//        arr = new int[capacity];
//        for (int i = 0; i < capacity; i++)
//        {
//            arr[i] = 0;
//        }
//    }
//    else
//    {
//        cout << "Invalid Set size." << endl;
//    }
//}
//void insertElement(int ele) {
//    if (noOfElements < capacity)
//    {
//        for (int i = 0; i < capacity; i++)
//        {
//            if (arr[i] == 0)
//            {
//                arr[noOfElements] = ele;
//                noOfElements++;
//                cout << "Element Inserted" << endl;
//                break;
//            }
//        }
//    }
//    else
//    {
//        cout << "Set is already Filled." << endl;
//    }
//}
//void removeElement(int ele) {
//    if (noOfElements > 0)
//    {
//        for (int i = 0; i < capacity; i++)
//        {
//            if (arr[i] == ele)
//            {
//                noOfElements--;
//                arr[i] = 0;
//                cout << "Element Removed" << endl;
//                break;
//            }
//        }
//    }
//    else
//    {
//        cout << "Set is already Filled." << endl;
//    }
//}
//void displaySet() {
//    cout << "Set Elements are : ";
//    for(int i = 0; i < capacity; i++)
//    {
//        cout << arr[i] << "\t";
//    }
//    cout << endl;
//}
//void freeSet() {
//    delete[] arr;
//    arr = NULL;
//    cout << "Set is freed!" << endl;
//}

////////// B=2 //////////
//void createSet(int capacity, int* arr) {
//    arr = new int[capacity];
//    for (int i = 0; i < capacity; i++)
//    {
//        arr[i] = 0;
//    }
//}
//void insertElement(int ele, int noOfElements, int capacity, int* arr) {
//    if (noOfElements < capacity)
//    {
//        for (int i = 0; i < capacity; i++)
//        {
//            if (arr[i] == 0)
//            {
//                arr[noOfElements] = ele;
//                noOfElements++;
//                cout << "Element Inserted" << endl;
//                break;
//            }
//        }
//    }
//    else
//    {
//        cout << "Set is already Filled." << endl;
//    }
//}
//void removeElement(int ele, int noOfElements, int capacity, int* arr) {
//    if (noOfElements > 0)
//    {
//        for (int i = 0; i < capacity; i++)
//        {
//            if (arr[i] == ele)
//            {
//                noOfElements--;
//                arr[i] = 0;
//                cout << "Element Removed" << endl;
//                break;
//            }
//        }
//    }
//    else
//    {
//        cout << "Set is already Filled." << endl;
//    }
//}
//void displaySet(int capacity, int* arr) {
//    cout << "Set Elements are : ";
//    for (int i = 0; i < capacity; i++)
//    {
//        cout << arr[i] << "\t";
//    }
//    cout << endl;
//}
//void freeSet(int* arr) {
//    delete[] arr;
//    arr = NULL;
//    cout << "Set is freed!" << endl;
//}


int main()
{
    ////////// A //////////
    //Date d;
    //d.day = 1;
    //d.month = 5;
    //d.year = 2000;
    //Date age = d.getAge(d);
    //age.displayAge();

    ////////// B=1 //////////
    //createSet(10);
    //insertElement(12);
    //insertElement(15);
    //insertElement(62);
    //insertElement(92);
    //insertElement(42);
    //insertElement(92);
    //removeElement(92);
    //displaySet();
    //freeSet();


    return 0;
}








